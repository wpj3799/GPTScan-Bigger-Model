import json
from query_ai import query
from rich.table import Table
from rich.console import Console

def remediateVulnerability(codeSnippet):
    secureAlternatives = query("Provide secure alternatives for the following vulnerable code: " + codeSnippet)
    return secureAlternatives

def suggestBestPractices(codeSnippet):
    bestPractices = query("Provide best practices for mitigating vulnerabilities in the following code: " + codeSnippet)
    return bestPractices

def rateVulnerability(codeSnippet):
    vulnerabilityAssessment = query(
        """You are a cybersecurity expert. Evaluate the following code snippet for vulnerabilities using CVSS and CVE classifications:

        Code Snippet:
        """ + codeSnippet + """

        Provide the following values in JSON format:
        {
          \"cvss_score\": <score>,
          \"cvss_severity\": \"<severity>\",
          \"cve_classification\": \"<description>\",
          \"recommendation\": \"<recommendation>\"
        }"""
    )
    return vulnerabilityAssessment

def main(codeSnippet):
    # Generate secure alternatives
    secureCode = remediateVulnerability(codeSnippet)
    
    # Suggest best practices
    bestPractices = suggestBestPractices(codeSnippet)
    
    # Rate the vulnerability
    vulnerabilityReport = json.loads(rateVulnerability(codeSnippet))
    
    # Build the result dictionary
    result = {
        "secure_code_examples": secureCode,
        "best_practices": bestPractices,
        "vulnerability_assessment": {
            "cvss_score": vulnerabilityReport["cvss_score"],
            "cvss_severity": vulnerabilityReport["cvss_severity"],
            "cve_classification": vulnerabilityReport["cve_classification"],
            "recommendation": vulnerabilityReport["recommendation"],
        },
    }
    
    return result
